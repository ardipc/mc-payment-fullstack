import Head from 'next/head'
import { Fragment, useState } from 'react'
import Menu from '../components/menu';
import { withIronSessionSsr } from "iron-session/next";
import { useRouter } from 'next/router';

import { absoluteUrl, toRupiah } from '../middleware/utils';
import { FaArrowLeft, FaArrowRight, FaCaretRight } from 'react-icons/fa';
import Footer from '../components/footer';

export const getServerSideProps = withIronSessionSsr(
  async function getServerSideProps({ req }) {
    const { user } = req.session;
    
    if (!user) {
      return {
        redirect: {
          destination: '/login',
          permanent: false
        },
      };
    }
    
    const {origin} = absoluteUrl(req);
    let fAccount = await fetch(`${origin}/api/account/${user.id}`);
    let rAccount = await fAccount.json();
    const { result } = rAccount;

    return {
      props: {
        user,
        account: result
      },
    };
  },
  {
    cookieName: "mc-payment-fullstack",
    password: "f89a89e7a62b05c1d3a5758cdcd6c7645a37549e",
    cookieOptions: {
      secure: process.env.NODE_ENV === "production",
    },
  },
);

export default function Home(props) {
  const { user, account } = props;

  const [name, setName] = useState(account.name);
  const [email, setEmail] = useState(account.email);
  const [note, setNote] = useState(account.note);

  const router = useRouter();

  const clickLogout = async (e) => {
    let options = {
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      method: 'DELETE'
    };
    let f = await fetch(`/api/account/logout`, options);
    let r = await f.json();
    const { success } = r;
    if (success) {
      router.push('/login');
    }
  }

  const clickSave = async (e) => {
    e.preventDefault();
    let form = { name, email, note };
    let options = {
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
      },
      method: 'PATCH',
      body: JSON.stringify(form)
    };
    let fUpd = await fetch(`/api/account/${user.id}`, options);
    let rUpd = await fUpd.json();
    const { success } = rUpd;
    if (success) {
      fetchAccount(user.id);
    }
  }

  const fetchAccount = async (userId) => {
    let fAccount = await fetch(`/api/account/${userId}`);
    let rAccount = await fAccount.json();
    const { result } = rAccount;
    setName(result.name);
    setEmail(result.email);
    setNote(result.note);
  }

  return (
    <Fragment>
      <div className="mobile">
        <Head>
          <title>Account</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className='top-bar'>
          <div className='top-bar-item'>
            <FaArrowLeft />
          </div>
          <div className='top-bar-item'>
            <h4>Account</h4>
          </div>
        </div>
        <main>
          <div style={{ textAlign: 'center' }}>
            <div style={{ margin: '32px 0' }}>
              <img alt="Avatar" src={`https://avatar.oxro.io/avatar.svg?name=${name}&rounded=100&background=fff&color=000`} width={100} />
            </div>
            <span style={{ marginTop: 24 }}>Balance</span>
            <h2 style={{ margin: '12px 24px' }}>{toRupiah(account.balance, 'Rp')}</h2>
          </div>


          <div style={{ padding: '12px 32px' }}>
            <form>
              <label htmlFor="fname">Name</label>
              <input value={name} onChange={e => setName(e.target.value)} type="text" />

              <label htmlFor="fname">Email</label>
              <input value={email} onChange={e => setEmail(e.target.value)} type="text" />

              <label htmlFor="fname">Note</label>
              <textarea value={note} onChange={e => setNote(e.target.value)} rows={6} />
              <br/>
              <button onClick={e => clickSave(e)}>Save</button>
            </form>
          </div>

          <div style={{ textAlign: 'center', paddingBottom: '26px' }}>
          </div>

          <div className='divider' />

          <div>
            <ul className='list'>
              <li className='list-item d-flex'>
                <span>About</span>
                <FaCaretRight />
              </li>
              <li onClick={e => clickLogout(e)} className='list-item d-flex'>
                <span>Logout</span>
                <FaCaretRight />
              </li>
            </ul>
          </div>

          <div className='divider' />

          <Footer />
        </main>
      </div>
      <Menu />
    </Fragment>
  )
}
